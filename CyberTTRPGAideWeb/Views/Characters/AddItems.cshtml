@using CyberTTRPGAideWeb.Classes
@model PaginatedList<CyberTTRPGAideWeb.Models.Entities.Item>

@{
    ViewData["Title"] = "AddItems";
}

<h1>Add Items</h1>
<h5> to @ViewBag.CharacterName </h5>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="AddItems" method="get">
    <div class="form-actions no-color">
        <p>
            Search by text: <input type="text" name="SearchString" value="@ViewData["SearchTerm"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
            @{
                if (!String.IsNullOrEmpty(ViewData["SearchTerm"]?.ToString()))
                {
                    <a asp-action="AddItems">Back to List</a>
                }
            }
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th class="cb-text-light">
                <a asp-action="AddItems" asp-route-sortOrder="@ViewData["IDSortParam"]" asp-route-searchString="@ViewData["SearchTerm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> ID </a>
            </th>
            <th class="cb-text-light">
                <a asp-action="AddItems" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-searchString="@ViewData["SearchTerm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Name </a>
            </th>
            <th class="cb-text-light">
                <a asp-action="AddItems" asp-route-sortOrder="@ViewData["ValueSortParam"]" asp-route-searchString="@ViewData["SearchTerm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Value </a>
            </th>
            <th class="cb-text-light">
                Description
            </th>
            <th class="cb-text-light">
                Effects
            </th>
            <th class="cb-text-light">
                <a asp-action="AddItems" asp-route-sortOrder="@ViewData["WeightSortParam"]" asp-route-searchString="@ViewData["SearchTerm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Weight </a>
            </th>
            <th class="cb-text-light"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td class="cb-text-lightish">
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td class="cb-text-lightish">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="cb-text-lightish">
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td class="cb-text-lightish">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td class="cb-text-lightish">
                @Html.DisplayFor(modelItem => item.Effects)
            </td>
            <td class="cb-text-lightish">
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td class="cb-text-lightish">
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a 
    asp-action="AddItems"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-searchString="@ViewData["SearchTerm"]"
    class="btn btn-primary @prevDisabled">
    Previous
</a>

<a
    asp-action="AddItems"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    asp-route-searchString="@ViewData["SearchTerm"]"
    class="btn btn-primary @nextDisabled">
    Next
</a>